{"version":3,"sources":["components/footer/Footer.js","components/navbar/Navbar.js","components/about/About.js","components/counter/Counter.js","components/contact/Contact.js","components/EncodeSection/Encode.js","components/EncodeSection/Decode.js","components/TextInverseCase/InverseCase.js","components/BoldText/BoldText.js","components/moreTools/ItalicText.js","components/moreTools/ConvertTextToImage.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","to","href","navbar","target","type","id","About","Counter","useState","text","setText","ref","useRef","clickOutside","setclickOutside","useEffect","checkIfClickedOutside","e","current","contains","document","addEventListener","getElementById","classList","add","removeEventListener","triggerAlert","Swal","fire","title","confirmButtonClass","handleUpperCase","length","convertUpper","toLocaleUpperCase","handleLowerCase","convertLower","toLocaleLowerCase","clicked","onClick","oldState","rows","value","onChange","event","placeholder","titleCase","split","map","str","substr","join","sentenceCase","toLowerCase","replace","c","toUpperCase","s","removeSpaces","copyText","select","setSelectionRange","navigator","clipboard","writeText","remove","Contact","Encode","res","btoa","innerHTML","readOnly","Decode","atob","InverseCase","inverCase","reverse","BoldText","style","fontWeight","ItalicText","fontStyle","ConvertTextToImage","backgroundColor","color","canvas","getContext","display","App","Fragment","path","heading","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6fb71834.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\nimport \"../footer/footer.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <>\r\n      <footer className=\"page-footer font-small cyan unique-color-dark\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-naivation\">\r\n            <ul>\r\n              <Link to=\"/\">\r\n                <li>\r\n                  <a href=\"\\\">Home</a>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/contact\">\r\n                <li>\r\n                  <a href=\"\\\">Contact</a>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/about\">\r\n                <li>\r\n                  <a href=\"\\\">About</a>\r\n                </li>\r\n              </Link>\r\n              <li>\r\n                <a href=\"\\\">Privacy and policy</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"\\\">Term and condition</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"footer-social-icon\">\r\n            <div className=\"mb-5 flex-center\">\r\n              <a className=\"fb-ic\" href=\"\\\">\r\n                <i className=\"fab fa-facebook-f fa-lg white-text mr-md-5 mr-3 fa-2x\"></i>\r\n              </a>\r\n\r\n              <a className=\"tw-ic\" href=\"\\\">\r\n                <i className=\"fab fa-twitter fa-lg white-text mr-md-5 mr-3 fa-2x\"></i>\r\n              </a>\r\n\r\n              <a className=\"li-ic\" href=\"\\\">\r\n                <i className=\"fab fa-linkedin-in fa-lg white-text mr-md-5 mr-3 fa-2x\"></i>\r\n              </a>\r\n\r\n              <a className=\"pin-ic\" href=\"\\\">\r\n                <i className=\"fab fa-github fa-lg white-text fa-2x\"> </i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"footer-copyright text-center py-3\">\r\n          © 2018 Copyright:\r\n          <a href=\"https://mdbootstrap.com/education/bootstrap/\"> AliRaza</a>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport \"../navbar/navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function navbar() {\r\n  return (\r\n    <div className=\"navbar_wraper \">\r\n      <nav className=\" navbar navbar-expand-xl navbar-dark unique-color-dark\">\r\n        <a href=\"\\\" target=\"_blank\" className=\"navbar-brand\">\r\n          Convert Text\r\n        </a>\r\n\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarText\"\r\n          aria-controls=\"navbarText\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <Link to=\"/\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link waves-effect waves-light\" href=\"\\\">\r\n                  Convert Case\r\n                </a>\r\n              </li>\r\n            </Link>\r\n            <Link to=\"/encode\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link waves-effect waves-light\" href=\"\\\">\r\n                  Encode String\r\n                </a>\r\n              </li>\r\n            </Link>\r\n\r\n            <Link to=\"/decode\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link waves-effect waves-light\" href=\"\\\">\r\n                  Decode String\r\n                </a>\r\n              </li>\r\n            </Link>\r\n\r\n            <Link to=\"/inverse\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link waves-effect waves-light\" href=\"\\\">\r\n                  Inverse Case\r\n                </a>\r\n              </li>\r\n            </Link>\r\n\r\n            <Link to=\"/textbold\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link waves-effect waves-light\" href=\"\\\">\r\n                  Bold Text Generator\r\n                </a>\r\n              </li>\r\n            </Link>\r\n\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"#\"\r\n                id=\"moreTools\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                More Tools\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"moreTools\">\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"/textToImage\">Convert Text To Image</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"/Italictext\">Italic Text Convert</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\"> Wide Text Generator</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\"> Binary Code Translator</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\">Underline Text Generator</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\"> Miror Text Generator</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\">Bubble Text Generator</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\"> Online Notepad </Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\"> Glitch Text Generator</Link>\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"\\\">\r\n                  <Link to=\"\\\"> Online Text tools </Link>\r\n                </a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n\r\n          <ul className=\"scoial-icons\">\r\n            <li>\r\n              <a href=\"https://www.linkedin.com/in/ali-raza-7689901a7/\">\r\n                <i className=\"fab fa-linkedin-in\"></i>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/AliRazaSaqib\">\r\n                <i className=\"fab fa-github\"></i>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://twitter.com/AliRaza55795782\">\r\n                <i className=\"fab fa-twitter\"></i>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://www.incomebomb.com/\">\r\n                <i className=\"fas fa-globe\"></i>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport \"../about/about.css\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <div className=\"about-section paddingTB60 gray-bg\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-7 col-sm-6\">\r\n              <div className=\"about-title clearfix\">\r\n                <h1>\r\n                  About <span>Us</span>\r\n                </h1>\r\n                <h3>Convert Case Software </h3>\r\n                <p className=\"about-paddingB\">\r\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec\r\n                  aliquet dolor libero, eget venenatis mauris finibus dictum.\r\n                  Vestibulum quis elit eget neque porttitor congue non sit amet\r\n                  dolor. Proin pretium purus a lorem ornare{\" \"}\r\n                </p>\r\n                <p>\r\n                  sed lobortis pulvinar. Integer laoreet mi id eros porta\r\n                  euismod. Suspendisse potenti. Nulla eros mauris, convallis et\r\n                  sem tempus, viverra hendrerit sapien\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../counter/Counter.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function Counter() {\r\n  const [text, setText] = useState(\"\");\r\n  const ref = useRef();\r\n  const [clickOutside, setclickOutside] = useState(false);\r\n\r\n  // it will detect the click outside the component\r\n  useEffect(() => {\r\n    const checkIfClickedOutside = (e) => {\r\n      if (clickOutside && ref.current && !ref.current.contains(e.target)) {\r\n        setclickOutside(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", checkIfClickedOutside);\r\n    document.getElementById(\"successMessage\").classList.add(\"d-none\");\r\n    return () => {\r\n      document.removeEventListener(\"click\", checkIfClickedOutside);\r\n    };\r\n  }, [clickOutside]);\r\n\r\n  //allert function\r\n  const triggerAlert = () => {\r\n    Swal.fire({\r\n      title: \"Please Enter text first than click on button\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n  //for copyclipboard\r\n  const clipBoardAlert = () => {\r\n    Swal.fire({\r\n      title: \"There is no text to copy\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n\r\n  //Convert Text to UpperCase\r\n  const handleUpperCase = () => {\r\n    if (text.length === 0) {\r\n      triggerAlert();\r\n    } else {\r\n      let convertUpper = text.toLocaleUpperCase();\r\n      setText(convertUpper);\r\n    }\r\n  };\r\n\r\n  //Convert Text to LowerCase\r\n  const handleLowerCase = () => {\r\n    if (text.length === 0) {\r\n      triggerAlert();\r\n    } else {\r\n      let convertLower = text.toLocaleLowerCase();\r\n      setText(convertLower);\r\n    }\r\n  };\r\n\r\n  //handleTitleCase text\r\n  const handleTitleCase = () => {\r\n    if (text.length === 0) {\r\n      triggerAlert();\r\n    } else {\r\n      let titleCase = text\r\n        .split(\" \")\r\n        .map(\r\n          (str) =>\r\n            str[0].toLocaleUpperCase() + str.substr(1).toLocaleLowerCase()\r\n        )\r\n        .join(\" \");\r\n\r\n      setText(titleCase);\r\n    }\r\n  };\r\n\r\n  //handleSentenceCase text\r\n  const handleSentenceCase = () => {\r\n    if (text.length === 0) {\r\n      triggerAlert();\r\n    } else {\r\n      let sentenceCase = text\r\n        .toLowerCase()\r\n        .replace(/(^\\s*\\w|[\\.\\!\\?]\\s*\\w)/g, function (c) {\r\n          return c.toUpperCase();\r\n        });\r\n\r\n      setText(sentenceCase);\r\n    }\r\n  };\r\n\r\n  //Show text in invserCase\r\n  let clicked = false;\r\n  const handleInverseCase = () => {\r\n    if (text.length === 0) {\r\n      triggerAlert();\r\n    } else if (clicked) {\r\n      handleUpperCase();\r\n      clicked = false;\r\n    } else {\r\n      handleLowerCase();\r\n      clicked = true;\r\n    }\r\n  };\r\n\r\n  //Reset textArea\r\n  const handleClearText = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  //Copy text to clipboard\r\n  const handleClipBoard = () => {\r\n    let copyText = document.getElementById(\"word_counter\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 2000);\r\n    navigator.clipboard.writeText(copyText.value);\r\n    if (text.length === 0) {\r\n      clipBoardAlert();\r\n    } else {\r\n      document.getElementById(\"successMessage\").classList.remove(\"d-none\");\r\n    }\r\n  };\r\n\r\n  //handleAlternateCase after enter text\r\n  const handleAlternateCase = () => {\r\n    if (text.length === 0) {\r\n      triggerAlert();\r\n    } else {\r\n      let invString = (s) =>\r\n        s.replace(/[a-z]/gi, (c) => c[`to${(s = !s) ? \"Low\" : \"Upp\"}erCase`]());\r\n      setText(invString(text));\r\n    }\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    if (text.length === 0) {\r\n      triggerAlert();\r\n    } else {\r\n      let removeSpaces = text.split(/[ ]+/);\r\n      setText(removeSpaces.join(\" \"));\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      <div\r\n        className=\"counter-main-div\"\r\n        onClick={() => setclickOutside((oldState) => !oldState)}\r\n      >\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"word_counter\"\r\n          rows=\"8\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          placeholder=\"Type copy or paste your content here\"\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"show_message d-none mt-2\" id=\"successMessage\">\r\n        Text Copy to Clickboard\r\n      </div>\r\n\r\n      <div className=\"mt-3 button_design\">\r\n        <button onClick={handleUpperCase}>ConvertToUpperCase</button>\r\n        <button onClick={handleLowerCase}>ConvertToLowerCase</button>\r\n        <button onClick={handleTitleCase}>TitleCase</button>\r\n        <button onClick={handleSentenceCase}>SentenceCase</button>\r\n        <button onClick={handleInverseCase}>InverCase</button>\r\n        <button onClick={handleClearText}>ClearText</button>\r\n        <button onClick={handleAlternateCase}>AlternateCase</button>\r\n        <button onClick={handleExtraSpaces}>RemoveExtraSpaces</button>\r\n        <button onClick={handleClipBoard}>ClearToClipBoard</button>\r\n      </div>\r\n      <div className=\"mt-4 word_counter_show\">\r\n        <p>\r\n          Character Count:\r\n          <span className=\"charater-count\">{text.length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Word Count:\r\n          <span className=\"word-count\">{text.split(/[^\\s]+/).length - 1}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Line Count:\r\n          <span className=\"word-count\">{text.split(\"\\n\").length - 1}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Time Spend To Read Text:\r\n          <span className=\"word-count\">\r\n            {0.008 * text.split(\" \").length} <span>Minutes</span>\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"text_preview mt-4\">\r\n        <h3>Content Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport \"../contact/contact.css\";\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <div className=\"contact-us\">\r\n      <div className=\"container contact-title\">\r\n        <h1 className=\"text-center\">\r\n          Contact <span>Us</span>\r\n        </h1>\r\n        <p className=\"text-center w-75 m-auto\">\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\r\n          interdum purus at sem ornare sodales. Morbi leo nulla, pharetra vel\r\n          felis nec, ullamcorper condimentum quam.\r\n        </p>\r\n        <div className=\"row adjustContent\">\r\n          <div className=\"col-sm-12 col-md-6 col-lg-3 my-2\">\r\n            <div className=\"card border-0\">\r\n              <div className=\"card-body text-center\">\r\n                <i className=\"fa fa-phone fa-5x mb-3\" aria-hidden=\"true\"></i>\r\n                <h4 className=\"text-uppercase mb-2\">call us</h4>\r\n                <p>+92307-7534255 | +92303-7892935</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6 col-lg-3 my-2\">\r\n            <div className=\"card border-0\">\r\n              <div className=\"card-body text-center\">\r\n                <i className=\"fa fa-globe fa-5x mb-3\" aria-hidden=\"true\"></i>\r\n                <h4 className=\"text-uppercase mb-2\">Website</h4>\r\n                <a href=\"https://www.incomebomb.com/\">incomebomb.com</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm-12 col-md-6 col-lg-3 my-2\">\r\n            <div className=\"card border-0\">\r\n              <div className=\"card-body text-center\">\r\n                <i className=\"fa fa-envelope fa-5x mb-3\" aria-hidden=\"true\"></i>\r\n                <h4 className=\"text-uppercase mb-2\">email</h4>\r\n                <p>raza80540@gmail.com | alics7033@gmail.com </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../EncodeSection/encode.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function Encode() {\r\n  const [text, setText] = useState(\"\");\r\n  const handleSmallTextGenerator = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const triggerAlert = () => {\r\n    Swal.fire({\r\n      title: \"Please Enter text first than click on button\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n\r\n  const handleEncoding = () => {\r\n    let checkEmpty = document.getElementById(\"set_input\").value;\r\n    if (checkEmpty === \"\") {\r\n      triggerAlert();\r\n    } else {\r\n      const res = btoa(text);\r\n      document.getElementById(\"get_input\").innerHTML = res;\r\n    }\r\n  };\r\n  const handleClear = () => {\r\n    document.getElementById(\"get_input\").innerHTML = \"\";\r\n    document.getElementById(\"set_input\").value = \"\";\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Enter <small>String</small> ToEncode\r\n      </h3>\r\n\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Recusandae\r\n        voluptas nisi tempore commodi nostrum doloribus repudiandae, aut quos\r\n        illo nobis alias nam animi provident architecto consectetur esse\r\n        sapiente voluptatem impedit.\r\n      </p>\r\n      <div className=\"holdsDivs\">\r\n        <div className=\"enterForEncode\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            id=\"set_input\"\r\n            placeholder=\"Type copy or paste your string here to encode\"\r\n            onChange={handleSmallTextGenerator}\r\n          ></textarea>\r\n\r\n          <div className=\"encodeButtons\">\r\n            <button onClick={handleEncoding}>Encode</button>\r\n            <button onClick={handleClear}>Clear</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"result\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"get_input\"\r\n            rows=\"8\"\r\n            readOnly\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 word_counter_show\">\r\n        <p>\r\n          Character Count:\r\n          <span className=\"charater-count\">{text.length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Word Count:\r\n          <span className=\"word-count\">{text.split(\" \").length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Line Count:\r\n          <span className=\"word-count\">{text.split(\"\\n\").length}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../EncodeSection/encode.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function Decode() {\r\n  const [text, setText] = useState(\"\");\r\n  const handleSmallTextGenerator = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const triggerAlert = () => {\r\n    Swal.fire({\r\n      title: \"Please Enter text first than click on button\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n  const handleEncoding = () => {\r\n    let checkEmpty = document.getElementById(\"set_input\").value;\r\n    if (checkEmpty === \"\") {\r\n      triggerAlert();\r\n    } else {\r\n      const res = atob(text);\r\n      document.getElementById(\"get_input\").innerHTML = res;\r\n    }\r\n  };\r\n  const handleClear = () => {\r\n    document.getElementById(\"get_input\").innerHTML = \"\";\r\n    document.getElementById(\"set_input\").value = \"\";\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Enter <small>String</small> ToDecode\r\n      </h3>\r\n\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Recusandae\r\n        voluptas nisi tempore commodi nostrum doloribus repudiandae, aut quos\r\n        illo nobis alias nam animi provident architecto consectetur esse\r\n        sapiente voluptatem impedit.\r\n      </p>\r\n      <div className=\"holdsDivs\">\r\n        <div className=\"enterForEncode\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            id=\"set_input\"\r\n            placeholder=\"Type copy or paste your string here to decode\"\r\n            onChange={handleSmallTextGenerator}\r\n          ></textarea>\r\n\r\n          <div className=\"encodeButtons\">\r\n            <button onClick={handleEncoding}>Decode</button>\r\n            <button onClick={handleClear}>Clear</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"result\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"get_input\"\r\n            rows=\"8\"\r\n            readOnly\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 word_counter_show\">\r\n        <p>\r\n          Character Count:\r\n          <span className=\"charater-count\">{text.length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Word Count:\r\n          <span className=\"word-count\">{text.split(\" \").length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Line Count:\r\n          <span className=\"word-count\">{text.split(\"\\n\").length}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nexport default function InverseCase() {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const triggerAlert = () => {\r\n    Swal.fire({\r\n      title: \"Please Enter text first than click on button\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n\r\n  //Show text in invserCase\r\n  const handleInverseCase = () => {\r\n    let checkEmpty = document.getElementById(\"set_input\").value;\r\n    if (checkEmpty === \"\") {\r\n      triggerAlert();\r\n    } else {\r\n      let inverCase = text.split(\"\").reverse().join(\"\");\r\n      document.getElementById(\"get_input\").innerHTML = inverCase;\r\n    }\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleClear = () => {\r\n    document.getElementById(\"get_input\").innerHTML = \"\";\r\n    document.getElementById(\"set_input\").value = \"\";\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Change <small>Text</small> IntoInverseCase\r\n      </h3>\r\n\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Recusandae\r\n        voluptas nisi tempore commodi nostrum doloribus repudiandae, aut quos\r\n        illo nobis alias nam animi provident architecto consectetur esse\r\n        sapiente voluptatem impedit.\r\n      </p>\r\n      <div className=\"holdsDivs\">\r\n        <div className=\"enterForEncode\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            id=\"set_input\"\r\n            placeholder=\"Type copy or paste your text here to InverCase\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n\r\n          <div className=\"encodeButtons\">\r\n            <button onClick={handleInverseCase}>Inverse</button>\r\n            <button onClick={handleClear}>Clear</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"result\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"get_input\"\r\n            rows=\"8\"\r\n            readOnly\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 word_counter_show\">\r\n        <p>\r\n          Character Count:\r\n          <span className=\"charater-count\">{text.length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Word Count:\r\n          <span className=\"word-count\">{text.split(\" \").length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Line Count:\r\n          <span className=\"word-count\">{text.split(\"\\n\").length}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../BoldText/boldText.css\";\r\n\r\nexport default function BoldText() {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const triggerAlert = () => {\r\n    Swal.fire({\r\n      title: \"Please Enter text first than click on button\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    document.getElementById(\"set_input\").value = \"\";\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleTextBold = () => {\r\n    let checkEmpty = document.getElementById(\"set_input\").value;\r\n    if (checkEmpty === \"\") {\r\n      triggerAlert();\r\n    } else {\r\n      document.getElementById(\"set_input\").style.fontWeight = \"bold\";\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Make <small>Text</small> Bold\r\n      </h3>\r\n\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Recusandae\r\n        voluptas nisi tempore commodi nostrum doloribus repudiandae, aut quos\r\n        illo nobis alias nam animi provident architecto consectetur esse\r\n        sapiente voluptatem impedit.\r\n      </p>\r\n      <div className=\"holdsDivs\">\r\n        <div className=\"enterForEncode textBold\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            id=\"set_input\"\r\n            placeholder=\"Type copy or paste your text here to make it bold\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n\r\n          <div className=\"encodeButtons\">\r\n            <button onClick={handleTextBold}>Bold</button>\r\n            <button onClick={handleClear}>Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 word_counter_show\">\r\n        <p>\r\n          Character Count:\r\n          <span className=\"charater-count\">{text.length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Word Count:\r\n          <span className=\"word-count\">{text.split(\" \").length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Line Count:\r\n          <span className=\"word-count\">{text.split(\"\\n\").length}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../moreTools/MoreTools.css\";\r\nexport default function ItalicText() {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const triggerAlert = () => {\r\n    Swal.fire({\r\n      title: \"Please Enter text first than click on button\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    document.getElementById(\"set_input\").value = \"\";\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleTextItalic = () => {\r\n    let checkEmpty = document.getElementById(\"set_input\").value;\r\n    if (checkEmpty === \"\") {\r\n      triggerAlert();\r\n    } else {\r\n      document.getElementById(\"set_input\").style.fontStyle = \"italic\";\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Make <small>Text</small> Italic\r\n      </h3>\r\n\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Recusandae\r\n        voluptas nisi tempore commodi nostrum doloribus repudiandae, aut quos\r\n        illo nobis alias nam animi provident architecto consectetur esse\r\n        sapiente voluptatem impedit.\r\n      </p>\r\n      <div className=\"holdsDivs\">\r\n        <div className=\"enterForEncode textBold\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            id=\"set_input\"\r\n            placeholder=\"Type copy or paste your text here to make it Italic\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n\r\n          <div className=\"encodeButtons\">\r\n            <button onClick={handleTextItalic}>Italic</button>\r\n            <button onClick={handleClear}>Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 word_counter_show\">\r\n        <p>\r\n          Character Count:\r\n          <span className=\"charater-count\">{text.length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Word Count:\r\n          <span className=\"word-count\">{text.split(\" \").length}</span>\r\n          <span className=\"seperator\">|</span>\r\n        </p>\r\n        <p>\r\n          Line Count:\r\n          <span className=\"word-count\">{text.split(\"\\n\").length}</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../moreTools/MoreTools.css\";\r\nexport default function ConvertTextToImage() {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const triggerAlert = () => {\r\n    Swal.fire({\r\n      title: \"Please Enter text first than click on button\",\r\n      confirmButtonClass: \"btn-dark\",\r\n    });\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n    if (text.length >= 50) {\r\n      Swal.fire({\r\n        title: \"You can enter maximum 50 words to convert text into image\",\r\n        confirmButtonClass: \"btn-dark\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    document.getElementById(\"set_input\").value = \"\";\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleTextToImage = () => {\r\n    const checkEmpty = document.getElementById(\"set_input\").value;\r\n    if (checkEmpty == \"\") {\r\n      triggerAlert();\r\n    } else {\r\n      let canvas = document.getElementById(\"textCanvas\"),\r\n        ctx = canvas.getContext(\"2d\"),\r\n        img = document.getElementById(\"image\");\r\n\r\n      const grow = (el) => {\r\n        el.style.height = \"10rem\";\r\n        el.style.height = el.scrollHeight + \"px\";\r\n      };\r\n\r\n      const generate = () => {\r\n        let text = document\r\n          .getElementById(\"set_input\")\r\n          .value.split(\"\\n\")\r\n          .join(\"\\n\");\r\n        let x = 12.5;\r\n        let y = 15;\r\n        let lineheight = 30;\r\n        let lines = text.split(\"\\n\");\r\n        let lineLengthOrder = lines.slice(0).sort(function (a, b) {\r\n          return b.length - a.length;\r\n        });\r\n        ctx.canvas.width = ctx.measureText(lineLengthOrder[0]).width + 25;\r\n        ctx.canvas.height = lines.length * lineheight;\r\n\r\n        ctx.fillStyle = \"#232323\";\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.font = \"20px Anonymous Pro\";\r\n        ctx.fillStyle = \"#BBBBBB\";\r\n        for (let i = 0; i < lines.length; i++)\r\n          ctx.fillText(lines[i], x, y + i * lineheight);\r\n        img.src = ctx.canvas.toDataURL();\r\n      };\r\n      document.getElementById(\"submit\").addEventListener(\"click\", function () {\r\n        document.getElementById(\"image\").style.display = \"block\";\r\n      });\r\n    }\r\n    // } else {\r\n    //   var ctx = document.getElementById(\"textCanvas\").getContext(\"2d\");\r\n    //   var imageElem = document.getElementById(\"image\");\r\n    //   var atext = document.getElementById(\"set_input\");\r\n\r\n    //   //split text into lines and find the longest one\r\n    //   let lines = atext.value.split(\"\\n\");\r\n    //   ctx.font = \"30px Verdana\";\r\n    //   let longest = lines.reduce((r, e) => (r.length < e.length ? e : r), \"\");\r\n    //   ctx.fillStyle = \"green\";\r\n    //   ctx.fillRect(10, 10, 150, 100);\r\n    //   ctx.canvas.width = ctx.measureText(longest).width + 90;\r\n    //   ctx.font = \"30px Verdana\";\r\n\r\n    //   for (let i = 0; i < lines.length; i++) {\r\n    //     ctx.fillText(lines[i], 20, 40 * i + 40);\r\n    //   }\r\n    //   imageElem.src = ctx.canvas.toDataURL();\r\n    //   // console.log(imageElem.src);\r\n    // }\r\n  };\r\n\r\n  // to chnage image div backgroud color in button click\r\n  const lightGrayBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#ABB8C3\";\r\n    document.getElementById(\"imageBackground\").style.color = \"white\";\r\n  };\r\n  const lightGreenBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#7BDCB5\";\r\n  };\r\n  const lightBlueBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#8ED1FC\";\r\n  };\r\n  const lightPinkBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#F78DA7\";\r\n  };\r\n  const lightYellowBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#FCB900\";\r\n  };\r\n  const lightPurpoleBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#D4C4FB\";\r\n  };\r\n  const darkPurpoleBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#9900EF\";\r\n  };\r\n  const LightYellowBackgroundColor = () => {\r\n    document.getElementById(\"imageBackground\").style.backgroundColor =\r\n      \"#DCE775\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Show <small>Image</small> Below\r\n      </h3>\r\n      <div className=\"image_backgroundChnage\">\r\n        <button\r\n          className=\"buttonDesign\"\r\n          id=\"lightGray\"\r\n          onClick={lightGrayBackgroundColor}\r\n          style={{ backgroundColor: \"#abb8c3\" }}\r\n        ></button>\r\n        <button\r\n          className=\"buttonDesign\"\r\n          id=\"lightGreen\"\r\n          onClick={lightGreenBackgroundColor}\r\n          style={{ backgroundColor: \"#7BDCB5\" }}\r\n        ></button>\r\n        <button\r\n          className=\"buttonDesign\"\r\n          id=\"lightBlue\"\r\n          onClick={lightBlueBackgroundColor}\r\n          style={{ backgroundColor: \"#8ED1FC\" }}\r\n        ></button>\r\n        <button\r\n          className=\"buttonDesign #F78DA7\"\r\n          id=\"lightPink\"\r\n          onClick={lightPinkBackgroundColor}\r\n          style={{ backgroundColor: \"#F78DA7\" }}\r\n        ></button>\r\n        <button\r\n          className=\"buttonDesign\"\r\n          id=\"lightPink\"\r\n          onClick={lightYellowBackgroundColor}\r\n          style={{ backgroundColor: \"#FCB900\" }}\r\n        ></button>\r\n        <button\r\n          className=\"buttonDesign #F78DA7\"\r\n          id=\"lightPink\"\r\n          onClick={darkPurpoleBackgroundColor}\r\n          style={{ backgroundColor: \"#9900EF\" }}\r\n        ></button>\r\n        <button\r\n          className=\"buttonDesign #F78DA7\"\r\n          id=\"lightPink\"\r\n          onClick={LightYellowBackgroundColor}\r\n          style={{ backgroundColor: \"#DCE775\" }}\r\n        ></button>\r\n        <button\r\n          className=\"buttonDesign #F78DA7\"\r\n          id=\"lightPink\"\r\n          onClick={lightPurpoleBackgroundColor}\r\n          style={{ backgroundColor: \"#d4c4fb\" }}\r\n        ></button>\r\n        <p>Choose color to change image background </p>\r\n      </div>\r\n      <div className=\"holdsDivs\">\r\n        <canvas className=\"canvaWidth\" id=\"textCanvas\"></canvas>\r\n        <div className=\"setImage\" id=\"imageBackground\">\r\n          <img id=\"image\" />\r\n        </div>\r\n\r\n        <div className=\"enterForEncode textBold\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            id=\"set_input\"\r\n            placeholder=\"Type copy or paste your text here to make it Italic\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n\r\n          <div className=\"encodeButtons\">\r\n            <button onClick={handleTextToImage}>Convert</button>\r\n            <button onClick={handleClear}>Clear</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/** @format */\nimport \"./App.css\";\n// import Counter from \"./components/counter/Counter\";\n\nimport Footer from \"./components/footer/Footer\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport About from \"./components/about/About\";\nimport Counter from \"./components/counter/Counter\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React from \"react\";\nimport Contact from \"./components/contact/Contact\";\nimport Encode from \"./components/EncodeSection/Encode\";\nimport Decode from \"./components/EncodeSection/Decode\";\nimport InverseCase from \"./components/TextInverseCase/InverseCase\";\nimport BoldText from \"./components/BoldText/BoldText\";\nimport ItalicText from \"./components/moreTools/ItalicText\";\nimport ConvertTextToImage from \"./components/moreTools/ConvertTextToImage\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <React.Fragment>\n          <div className=\"main-wraper\">\n            <Navbar />\n            <div className=\"forMiddleSection\">\n              <div className=\"container center-section\">\n                <Route\n                  path=\"/\"\n                  heading=\"Enter Text Here\"\n                  exact\n                  component={Counter}\n                />\n\n                <Route\n                  path=\"/encode\"\n                  heading=\"Enter Text Here\"\n                  exact\n                  component={Encode}\n                />\n\n                <Route\n                  path=\"/decode\"\n                  heading=\"Enter Text Here\"\n                  exact\n                  component={Decode}\n                />\n\n                <Route\n                  path=\"/inverse\"\n                  heading=\"Enter Text Here\"\n                  exact\n                  component={InverseCase}\n                />\n\n                <Route\n                  path=\"/textbold\"\n                  heading=\"Enter Text Here\"\n                  exact\n                  component={BoldText}\n                />\n\n                <Route\n                  path=\"/Italictext\"\n                  heading=\"Enter Text Here\"\n                  exact\n                  component={ItalicText}\n                />\n\n                <Route\n                  path=\"/textToImage\"\n                  heading=\"Enter Text Here\"\n                  exact\n                  component={ConvertTextToImage}\n                />\n\n                <Route path=\"/about\" exact component={About} />\n                <Route path=\"/contact\" exact component={Contact} />\n              </div>\n            </div>\n\n            <div className=\"footer-section\">\n              <Footer />\n            </div>\n          </div>\n        </React.Fragment>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}